#!/usr/bin/env python3
import http.server
import socketserver
import os
import sys

# ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô directory ‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå hotspot
os.chdir('/Users/mansuangpawong/Code/hotspot')

PORT = 8000

class MyHTTPRequestHandler(http.server.SimpleHTTPRequestHandler):
    def end_headers(self):
        # ‡πÄ‡∏û‡∏¥‡πà‡∏° headers ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô caching
        self.send_header('Cache-Control', 'no-cache, no-store, must-revalidate')
        self.send_header('Pragma', 'no-cache')
        self.send_header('Expires', '0')
        super().end_headers()

    def do_GET(self):
        # ‡∏ñ‡πâ‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤ root ‡πÉ‡∏´‡πâ redirect ‡πÑ‡∏õ login.html
        if self.path == '/':
            self.send_response(302)
            self.send_header('Location', '/login.html')
            self.end_headers()
            return
        
        # ‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà ‡πÉ‡∏´‡πâ‡πÅ‡∏™‡∏î‡∏á login.html
        if not os.path.exists(self.path[1:]):
            self.path = '/login.html'
        
        return super().do_GET()

if __name__ == "__main__":
    try:
        with socketserver.TCPServer(("", PORT), MyHTTPRequestHandler) as httpd:
            print(f"üöÄ Server ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏£‡∏±‡∏ô‡∏ó‡∏µ‡πà http://localhost:{PORT}")
            print(f"üì± ‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏ö‡∏£‡∏≤‡∏ß‡πå‡πÄ‡∏ã‡∏≠‡∏£‡πå‡πÑ‡∏õ‡∏ó‡∏µ‡πà http://localhost:{PORT}")
            print("üõë ‡∏Å‡∏î Ctrl+C ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏´‡∏¢‡∏∏‡∏î server")
            httpd.serve_forever()
    except KeyboardInterrupt:
        print("\nüëã Server ‡∏´‡∏¢‡∏∏‡∏î‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß")
        sys.exit(0)
    except OSError as e:
        if e.errno == 48:  # Address already in use
            print(f"‚ùå Port {PORT} ‡∏ñ‡∏π‡∏Å‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß")
            print(f"üí° ‡∏•‡∏≠‡∏á‡πÉ‡∏ä‡πâ port ‡∏≠‡∏∑‡πà‡∏ô: python3 server.py {PORT + 1}")
        else:
            print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}")
        sys.exit(1)
